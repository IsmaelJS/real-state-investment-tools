name: Test
on: 
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - "main"
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/Checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Check cached dependencies
        uses: actions/cache@v3
        id: cache-venv  # name for referring later
        with:
          path: ./.venv/  # what we cache: the virtualenv
          # The cache key depends on requirements.txt
          key: ${{ hashFiles('**/requirements*.txt') }}
      # Build a virtualenv, but only if it doesn't already exist
      - name: Create venv
        run: python -m venv ./.venv && . ./.venv/bin/activate && 
            pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      # Run tests
      # Note that you have to activate the virtualenv in every step
      # because GitHub actions doesn't preserve the environment
      - name: autopep8
        id: autopep8
        uses: peter-evans/autopep8@v2
        with:
          args: --exit-code --recursive --in-place --aggressive --aggressive .
      - name: Fail if autopep8 made changes
        if: steps.autopep8.outputs.exit-code == 2
        run: exit 1

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/Checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Check cached dependencies
        uses: actions/cache@v3
        id: cache-venv  # name for referring later
        with:
          path: ./.venv/  # what we cache: the virtualenv
          # The cache key depends on requirements.txt
          key: ${{ hashFiles('**/requirements*.txt') }}
      # Build a virtualenv, but only if it doesn't already exist
      - name: Create venv
        run: python -m venv ./.venv && . ./.venv/bin/activate && 
            pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      # Run tests
      # Note that you have to activate the virtualenv in every step
      # because GitHub actions doesn't preserve the environment
      - name: Tests
        run: make test




